name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Lint
      run: npm run lint
    
    - name: Run Tests
      run: npm test -- --coverage
    
    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage
        path: ./frontend/coverage

  python-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/data-producer

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: './backend/data-producer/requirements.txt'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Run linting
      run: flake8 .
    
    - name: Run tests with coverage
      run: pytest --cov=. --cov-report=xml
    
    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      with:
        name: python-coverage
        path: ./backend/data-producer/coverage.xml

  java-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/data-analyzer

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'oracle'
        cache: 'maven'
    
    - name: Build and test with Maven
      run: mvn -B verify --file pom.xml
    
    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      with:
        name: java-coverage
        path: ./backend/data-analyzer/target/site/jacoco

  coverage-report:
    needs: [frontend-test, python-test, java-test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all coverage reports
      uses: actions/download-artifact@v3
    
    - name: Generate combined coverage report
      run: |
        echo "# Test Coverage Report" >> coverage_report.md
        echo "## Frontend Coverage" >> coverage_report.md
        cat frontend-coverage/coverage-final.json || echo "No frontend coverage data" >> coverage_report.md
        echo "## Python Coverage" >> coverage_report.md
        cat python-coverage/coverage.xml || echo "No Python coverage data" >> coverage_report.md
        echo "## Java Coverage" >> coverage_report.md
        cat java-coverage/index.html || echo "No Java coverage data" >> coverage_report.md
    
    - name: Upload combined report
      uses: actions/upload-artifact@v3
      with:
        name: combined-coverage-report
        path: coverage_report.md